{"version":3,"sources":["utils/load-contract.js","App.js","reportWebVitals.js","index.js"],"names":["loadContract","name","provider","a","fetch","res","json","Artifact","_contract","contract","setProvider","deployed","deployedContract","App","useState","web3","web3Api","setWeb3Api","account","setAccount","balance","setBalance","reload","shouldReload","reloadEffect","setAccountListener","on","accounts","useEffect","loadProvider","detectEthereumProvider","request","method","Web3","alert","loadBalance","eth","getBalance","address","utils","fromWei","transferFund","transfer","from","value","toWei","withdrawFund","withdrawAmout","withdraw","getAccount","getAccounts","class","Button","variant","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27543ae5.chunk.js","sourcesContent":["import contract from \"@truffle/contract\";\r\n\r\nexport const loadContract = async (name, provider) => {\r\n  const res = await fetch(`/contracts/${name}.json`);\r\n  const Artifact = await res.json();\r\n  const _contract = contract(Artifact);\r\n  _contract.setProvider(provider);\r\n  const deployedContract = await _contract.deployed();\r\n  return deployedContract;\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport { Button} from 'react-bootstrap';\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { loadContract } from \"./utils/load-contract\";\n\nfunction App() {\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    web3: null,\n    contract: null,\n  });\n\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [reload, shouldReload] = useState(false);\n\n  const reloadEffect = () => shouldReload(!reload);\n  const setAccountListener = (provider) => {\n    provider.on(\"accountsChanged\", (accounts) => setAccount(accounts[0]));\n  };\n  useEffect(() => {\n    const loadProvider = async () => {\n      const provider = await detectEthereumProvider();\n      const contract = await loadContract(\"Funder\", provider);\n      if (provider) {\n        setAccountListener(provider);\n        provider.request({ method: \"eth_requestAccounts\" });\n        setWeb3Api({\n          web3: new Web3(provider),\n          provider,\n          contract,\n        });\n      } else {\n        alert(\"error\");\n      }\n     \n    };\n\n    loadProvider();\n  }, []);\n\n  useEffect(() => {\n    const loadBalance = async () => {\n      const { contract, web3 } = web3Api;\n      const balance = await web3.eth.getBalance(contract.address);\n      setBalance(web3.utils.fromWei(balance, \"ether\"));\n    };\n    web3Api.contract && loadBalance();\n  }, [web3Api, reload]);\n\n  const transferFund = async () => {\n    const { web3, contract } = web3Api;\n    await contract.transfer({\n      from: account,\n      value: web3.utils.toWei(\"2\", \"ether\"),\n    });\n    reloadEffect();\n  };\n\n  const withdrawFund = async () => {\n    const { contract, web3 } = web3Api;\n    const withdrawAmout = web3.utils.toWei(\"2\", \"ether\");\n    await contract.withdraw(withdrawAmout, {\n      from: account,\n    });\n    reloadEffect();\n  };\n\n  useEffect(() => {\n    const getAccount = async () => {\n      const accounts = await web3Api.web3.eth.getAccounts();\n      setAccount(accounts[0]);\n    };\n    web3Api.web3 && getAccount();\n  }, [web3Api.web3]);\n\n  return (\n    <>\n      <div class=\"card text-center\">\n        <div class=\"card-header\">Funding</div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Balance: {balance} ETH </h5>\n          <p class=\"card-text\">\n            Account : {account ? account : \"not connected\"}\n          </p>\n      \n          &nbsp;\n          <Button variant=\"outline-primary\" onClick={transferFund}>Transfer</Button>{' '}\n         \n          &nbsp;\n          <Button variant=\"outline-danger\" onClick={withdrawFund}> Withdraw</Button>{' '}\n        </div>\n        \n       \n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}